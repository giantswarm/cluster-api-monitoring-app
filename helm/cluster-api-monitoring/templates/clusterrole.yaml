apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "name" . }}
  labels: {{- include "labels.common" . | nindent 4}}
rules:
{{- if .Capabilities.APIVersions.Has "policy/v1beta1/PodSecurityPolicy" }}
  - apiGroups:
      - policy
      - extensions
    resources:
      - podsecuritypolicies
    verbs:
      - use
    resourceNames:
      - {{ include "name" . }}
{{- end }}
{{- /*
range over all `monitoredResources`, get all `groups` and create a rule per `group`.
Result will look like:
```yaml
  - apiGroups:
      - cluster.x-k8s.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - controlplane.cluster.x-k8s.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
```
*/ -}}
{{- $monitoredApiGroups := list -}}
{{- range $componentKey, $componentVal := .Values.monitoredResources -}}
  {{- range $key, $val := $componentVal -}}
    {{- if $.Files.Get (printf "configuration/%s_%s.yaml" $componentKey $key) -}}
    {{ $monitoredApiGroups = append $monitoredApiGroups $val.group }}
    {{- end }}
  {{- end }}
{{- end }}
{{- range $monitoredApiGroups | uniq }}
  - apiGroups:
      - {{ . }}
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
{{- end }}
